import org.overlord.rtgov.analytics.service.ResponseTime
import org.overlord.rtgov.analytics.situation.Situation
import org.jboss.rtgov.actvity.Util

global org.overlord.rtgov.ep.EPContext epc

declare ResponseTime
    @role( event )
end

rule " Handler Low"
when
    $rt : ResponseTime(average > 500 && average < 1000 ) from entry-point "ServiceResponseTimes"

then
     epc.logError("DEMO -  Low situation : response time "+$rt.getAverage());
     Situation st =Util.createSituation($rt);
     st.setDescription("  Response time for OrderService [500ms - 1000ms]" );
     st.setSeverity(Situation.Severity.Low);
     st.getProperties().put("txTime ",""+$rt.getAverage());
     epc.handle(st);

     end

rule " Handler Medium"
when
         $rt : ResponseTime(average >= 1000 && average < 2000   ) from entry-point "ServiceResponseTimes"

then
        epc.logError("DEMO - Medium situation: response time "+$rt.getAverage());
        Situation st =Util.createSituation($rt);
        st.setDescription(" Response time for OrderService [1000ms - 2000ms] " );
        st.setSeverity(Situation.Severity.Medium);
        st.getProperties().put("txTime ",""+$rt.getAverage());
        epc.handle(st);


end

rule " Handler Critical"
when
    $rt : ResponseTime(average >= 2000 ) from entry-point "ServiceResponseTimes"
then
       epc.logError("DEMO - Critical Situation : response time "+$rt.getAverage());
      Situation st =Util.createSituation($rt);
       st.setDescription("  Response time for OrderService [2000ms - *] " );
       st.setSeverity(Situation.Severity.Critical);
       st.getProperties().put("txTime ",""+$rt.getAverage());
       // todo Define handler for sending email
       epc.handle(st);

end

